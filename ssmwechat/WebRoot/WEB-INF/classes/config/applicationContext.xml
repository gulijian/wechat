<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.0.xsd">
	<!-- 开启包的注解 -->
	<context:component-scan base-package="com.my.weixin.service"></context:component-scan>
	<context:component-scan base-package="com.my.weixin.dao"></context:component-scan>
	
	<!-- 引入属性配置文件 -->
 	<context:property-placeholder location="classpath:config/db.properties" file-encoding="utf-8"/> 

	 <!--1、 数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" 	value="${jdbc.driver}"/>
		<property name="jdbcUrl" 		value="${jdbc.url}"/>
		<property name="user" 			value="${jdbc.username}"/>
		<property name="password" 		value="${jdbc.password}"/>

		<property name="initialPoolSize"><value>${c3p0.initialPoolSize}</value></property>
  		<property name="minPoolSize"><value>${c3p0.minPoolSize}</value></property>
  		<property name="maxPoolSize"><value>${c3p0.maxPoolSize}</value></property>
  		<property name="maxIdleTime"><value>${c3p0.maxIdleTime}</value></property>
        <property name="acquireIncrement"><value>${c3p0.acquireIncrement}</value></property>
        <property name="maxStatements"><value>${c3p0.maxStatements}</value></property>
        <property name="idleConnectionTestPeriod"><value>${c3p0.idleConnectionTestPeriod}</value></property>
        <property name="acquireRetryDelay"><value>${c3p0.acquireRetryDelay}</value></property>
        <property name="acquireRetryAttempts"><value>${c3p0.acquireRetryAttempts}</value></property>
        <property name="breakAfterAcquireFailure"><value>${c3p0.breakAfterAcquireFailure}</value></property>
        <property name="testConnectionOnCheckout"><value>${c3p0.testConnectionOnCheckout}</value></property>
        <property name="numHelperThreads"><value>${c3p0.numHelperThreads}</value></property> 
	</bean>

	<!-- 2. mybatis的SqlSession的工厂: SqlSessionFactoryBean dataSource / typeAliasesPackage -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:config/mybatis-config.xml" />
	</bean>
	
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">    
        <constructor-arg index="0" ref="sqlSessionFactory" />    
    </bean> 

	<!-- 4. 事务管理 : DataSourceTransactionManager -->
 	<bean id="manager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
 		<property name="dataSource" ref="dataSource" /> 
	</bean> 


	<!-- 5. 使用声明式事务 -->
	<tx:annotation-driven transaction-manager="manager" />
	
	

	
		
	
</beans>
